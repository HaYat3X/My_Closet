<div id="sns_posts">
    <%# ! header %>
    <div class="mobile-header">
        <%= render "sns/layouts/mobile_header" %>
    </div>

    <div class="pc-header">
        <%= render "sns/layouts/pc_header" %>
    </div>

    <div class="row g-0">
        <%# ! sidebar %>
        <div class="col-lg-2 pc-sidebar">
            <%= render "sns/layouts/pc_sidebar" %>
        </div>

        <div class="col-12 mobile-sidebar">
            <%= render "sns/layouts/mobile_sidebar" %>
        </div>

        <%# ! contents %>
        <div class="list_content col-lg-10 col-12">
            <div class="bg-white py-5 h-100">
                <%# * バリデーションチェク %>
                <% if @social.errors.any? %>
                    <div class="alert alert-danger col-lg-8 mx-auto" role="alert">
                        <% @social.errors.each do |error| %>
                            <strong>エラー！</strong> - <%= error.full_message %><br>
                        <% end %>
                    </div>
                <% end %>

                <%# * 投稿フォーム %>
                <%= form_with(model: @social, url: "/sns/update/#{@social.id}", local: true, :html => {class:"needs-validation col-lg-8 mx-auto", :novalidate => true}) do |f| %>
                    <div class="mb-3">
                    <%= f.select :tag, ['カジュアルスタイル', 'ストリートスタイル', 'アメカジスタイル', 'ルードスタイル', 'アウトドアスタイル', 'デザイナースタイル', 'ベーシックスタイル', 'モードスタイル', 'ラグジュアリースタイル', 'ガーリースタイル', 'ナチュラルスタイル'], {include_blank: 'スタイルを選択してください'}, class: 'form-control', required: true %>
                    <div class="invalid-feedback">
                        スタイルを入力して下さい。
                    </div>
                    </div>

                    <div class="mb-3">
                        <%= f.text_field :message, class: "form-control", placeholder: "投稿文" %>
                    </div>

                    <div class="mb-3">
                        <%= f.file_field :photograph, class: "form-control", placeholder: "写真", required: false %>
                    </div>

                    <div class="mb-3">
                    <label for="" class="mb-2">着用アイテム（6件まで追加できます）</label>
                    <p id="messageContainer" class="text-danger small"></p>

                    <div id="scroll">
                    <div id="scrollContainer" class="row g-1">
                        <% @closets_all.each do |c| %>
                        <div class="col-lg-2">
                            <%= label_tag "element_#{c.id}", image_tag(c.photograph.url, class: "sns-post-image"), class: "checkbox-image-label" %>
                            <%= check_box_tag 'elements[]', c.id, false, id: "element_#{c.id}", class: "checkbox-image" %>
                        </div>
                        <% end %>
                    </div>
                    </div>

                    <%= f.submit "登録する", class: "btn mt-3 btn-primary" %>
                <% end %>
            </div>
        </div>
    </div>
</div>
<script>
  $(document).ready(function() {
    // SNS投稿画面、SNS編集画面でアイテムを選択数や選択上限を制御

    var maxSelection = 6; // 最大選択数
    var checkboxes = $('.checkbox-image');
    var selectedImages = []; // 選択された画像の配列
    var markCounter = 1; // マークのカウンター

    var messageContainer = $('#messageContainer');

    checkboxes.change(function() {
      var selectedCount = checkboxes.filter(':checked').length;
      var image = $(this).prev('.checkbox-image-label').find('img');
      var label = $(this).prev('.checkbox-image-label');

      // 以下省略...

      if ($(this).is(':checked')) {
        // 画像が選択された場合
        if (selectedCount <= maxSelection) {
          // 選択数が最大選択数以下の場合
          var mark = $('<span class="image-mark">' + markCounter + '</span>');
          markCounter++;
          selectedImages.push({
            image: image,
            mark: mark
          });
          image.addClass('selected-image');
          label.append(mark).css('position', 'relative');
        } else {
          // 選択数が最大選択数を超えた場合
          $(this).prop('checked', false);
          showMessage('アイテムの最大選択数は6件までです。');
        }
      } else {
        // 画像が選択解除された場合
        var index = selectedImages.findIndex(function(item) {
          return item.image.is(image);
        });
        if (index > -1) {
          // 選択された画像が配列内に存在する場合
          var removedItem = selectedImages.splice(index, 1)[0];
          removedItem.image.removeClass('selected-image');
          removedItem.mark.remove();
        }

        // マークの再配置
        selectedImages.forEach(function(item, index) {
          item.mark.text(index + 1);
        });

        markCounter--;
      }

      if (selectedCount <= maxSelection) {
        hideMessage();
      }
    });

    function showMessage(message) {
      messageContainer.text(message).show();
    }

    function hideMessage() {
      messageContainer.hide();
    }

    // 特定のIDのチェックボックスを選択状態にする
    function selectCheckboxById(id) {
      var checkbox = $('#' + id);
      checkbox.prop('checked', true).trigger('change');
    }

    var item1 = '<%= j @item1 %>';
    var item2 = '<%= j @item2 %>';
    var item3 = '<%= j @item3 %>';
    var item4 = '<%= j @item4 %>';
    var item5 = '<%= j @item5 %>';
    var item6 = '<%= j @item6 %>';

    selectCheckboxById("element_" + item1);
    selectCheckboxById("element_" + item2);
    selectCheckboxById("element_" + item3);
    selectCheckboxById("element_" + item4);
    selectCheckboxById("element_" + item5);
    selectCheckboxById("element_" + item6);
  });
</script>




