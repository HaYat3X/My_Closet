<div id="sns_posts">
    <div class="d-flex">
        <%# ! sidebar %>
        <div class="side-content">
            <%= render "layouts/pc_sidebar" %>
        </div>

        <%# ! contents %>
        <div class="main-content">
            <div class="new-edit-content mx-auto">
                <h3 class="fw-bold text-center">コーディネート新規投稿</h3>

                <%= form_with(model: @social, url: "/sns/create", local: true) do |f| %>
                    <div class="mb-3">
                        <%= f.text_field :title, class: "form-control", placeholder: "投稿タイトルを入力..." %>

                        <div>
                            <% @social.errors[:title].each do |error| %>
                                <small class="text-danger">コーディネートタイトルを入力してください。</small>
                            <% end %>
                        </div>
                    </div>

                    <div class="mb-3">
                        <%= f.select :tag, ['カジュアルスタイル', 'ストリートスタイル', 'アメカジスタイル', 'ルードスタイル', 'アウトドアスタイル', 'デザイナースタイル', 'ベーシックスタイル', 'モードスタイル', 'ラグジュアリースタイル', 'ガーリースタイル', 'ナチュラルスタイル'], {include_blank: 'コーディネートスタイルを選択 ▾'}, class: 'form-control' %>

                        <div>
                            <% @social.errors[:tag].each do |error| %>
                                <small class="text-danger">コーディネートスタイルを選択してください。</small>
                            <% end %>
                        </div>
                    </div>

                    <div class="mb-3">
                        <%# * 投稿文の入力 %>
                        <%= f.text_area :message, class: "form-control", placeholder: "投稿文を入力...", style: "height: 120px;" %>
                    </div>

                    <div class="mb-3">
                        <label class="fw-bold">コーディネート画像を追加</label><br>
                        <button type="button" class="coordinate" data-bs-toggle="modal" data-bs-target="#CoordinateModal">
                            <div id="image-preview" class="preview"></div>
                        </button>

                        <div class="modal fade modal-area modal-dialog-scrollable" id="CoordinateModal" tabindex="-1" aria-labelledby="exampleModalLabel">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h6 class="modal-title fs-6 fw-bold mx-auto" id="exampleModalLabel">コーディネート画像を設定</h6>
                                    </div>

                                    <div class="modal-body">
                                        <div class="col-lg-7 mx-auto coordinate-modal">
                                            <%= f.file_field :photograph, class: "form-control", id: "file-input" %>
                                        </div>
                                    </div>

                                    <div class="modal-footer post-area text-center">
                                        <div class="mx-auto">
                                            <button type="button" class="btn px-3 text-white border" data-bs-dismiss="modal" onclick="SnsPostFileReset()">キャンセル</button>
                                            <button type="button" class="btn px-3 submit-btn" data-bs-dismiss="modal">選択</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div>
                            <% @social.errors[:photograph].each do |error| %>
                                <small class="text-danger">コーディネート画像を設定してください。</small>
                            <% end %>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="fw-bold">着用アイテムを追加</label><br>
                        <button type="button" class="text-start btn col-12 item" data-bs-toggle="modal" data-bs-target="#Item1Modal">
                            着用アイテムを選択 ▾
                        </button>

                        <div class="modal modal-xl fade modal-area modal-dialog-scrollable" id="Item1Modal" tabindex="-1" aria-labelledby="exampleModalLabel">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h6 class="modal-title fs-6 fw-bold mx-auto" id="exampleModalLabel">クローゼットからアイテムを追加</h6>
                                    </div>

                                    <div class="modal-body">
                                        <div id="scrollContainer" class="mx-auto">
                                            <p id="messageContainer" class="text-danger small"></p>

                                            <div class="row g-1">
                                                <% @closets_all.each do |c| %>
                                                    <div class="col-lg-2">
                                                        <%= label_tag "element_#{c.id}", image_tag(c.photograph.url, class: "sns-post-image"), class: "checkbox-image-label" %>

                                                        <%= check_box_tag 'elements[]', c.id, false, id: "element_#{c.id}", class: "checkbox-image" %>
                                                    </div>
                                                <% end %>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="modal-footer post-area text-center">
                                        <div class="mx-auto">
                                            <button type="button" class="btn px-3 text-white border" data-bs-dismiss="modal" onclick="SnsClosetItemReset()">キャンセル</button>
                                            <button type="button" class="btn px-3 submit-btn" data-bs-dismiss="modal">選択</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="post-area py-3 ms-auto">
                        <a href="/" class="btn px-3 text-white border">キャンセル</a>
                        <%= f.submit "投稿", class: "btn px-3 submit-btn" %>
                    </div>
                <% end %>
            </div>
        </div>
    </div>
</div>

<script>
    <%# ! 選択した画像をプレビューする %>
    var fileInput = document.getElementById('file-input');
    var preview = document.getElementById('image-preview');
    var reader = new FileReader();

    <%# * 画像を選択していない場合はデフォルト画像を表示する %>
    var defaultImage = new Image();
    defaultImage.src = "/assets/adds/img_add.png";
    defaultImage.alt = 'デフォルト画像';
    defaultImage.classList.add('preview');
    defaultImage.style.objectFit = 'cover';
    defaultImage.style.width = '189px';
    defaultImage.style.height = '262px';
    defaultImage.style.borderRadius = '10px';
    preview.appendChild(defaultImage);

    <%# * 画像が選択されたら、その画像をプレビューする %>
    fileInput.addEventListener('change', function(event) {
        var file = event.target.files[0];

        reader.onload = function(e) {
            preview.innerHTML = '';
            var image = new Image();
            image.src = e.target.result;
            image.alt = 'プレビュー画像';
            image.classList.add('preview');
            image.style.width = '189px';
            image.style.height = '262px';
            image.style.objectFit = 'cover';
            image.style.borderRadius = '10px';
            preview.appendChild(image);
        };

        reader.readAsDataURL(file);
    });

    // * 選択できるアイテムの上限を設定
    var maxSelection = 6;

    // * チェックボックスの要素を変数に格納
    var checkboxes = $('.checkbox-image');

    // * 選択された画像が入る配列を定義
    var selectedImages = [];

    // * 選択順に番号を表示するためにカウンター
    var markCounter = 1;

    // * 選択数が6件超えた場合に、エラーメッセージを表示する要素を変数に格納
    var messageContainer = $('#messageContainer');

    // * チェックボックスの状態を取得
    checkboxes.change(function() {
        // ? 選択されているチェックボックスの数を取得
        var selectedCount = checkboxes.filter(':checked').length;
        var image = $(this).prev('.checkbox-image-label').find('img');
        var label = $(this).prev('.checkbox-image-label');

        if ($(this).is(':checked')) {
            // ? 画像が選択された場合
            if (selectedCount <= maxSelection) {
                // 選択数が最大選択数以下の場合は、選択された順に画像の上に番号を表示
                var mark = $('<span class="image-mark">' + markCounter + '</span>');
                markCounter++;
                selectedImages.push({
                    image: image,
                    mark: mark,
                });
                // cssの適用
                image.addClass('selected-image');
                label.append(mark).css('position', 'relative');
            } else {
                // 選択数が最大選択数を超えた場合は、チェックできないようにする
                $(this).prop('checked', false);
                // エラーメッセージの表示
                showMessage('アイテムの最大選択数は6アイテムまでです。');
            }
        } else {
            // ? 画像が選択解除された場合
            var index = selectedImages.findIndex(function(item) {
                return item.image.is(image);
            });
            if (index > -1) {
                // 選択された画像が配列内に存在する場合は、cssの適用を解除
                var removedItem = selectedImages.splice(index, 1)[0];
                removedItem.image.removeClass('selected-image');
                removedItem.mark.remove();
            }
            // カウンターを1減らし、番号を再度適用する
            selectedImages.forEach(function(item, index) {
                item.mark.text(index + 1);
            });
            // カウンターを1減らす
            markCounter--;
        }

        // ? 選択されたアイテムが6件以下の場合は、エラーメッセージの表示を解除
        if (selectedCount <= maxSelection) {
            hideMessage();
        }
    });

    // * エラーメッセージを表示する関数
    function showMessage(message) {
        messageContainer.text(message).show();
    }

    // * エラーメッセージを非表示にする関数
    function hideMessage() {
        messageContainer.hide();
    }

    function SnsClosetItemReset() {
        // 選択された画像をリセットするため、配列とカウンターを初期化
        selectedImages = [];
        markCounter = 1;

        // チェックボックスの状態を初期化
        checkboxes.prop('checked', false);

        // 画像の表示や番号の削除をリセット
        $('.checkbox-image-label').find('.selected-image').removeClass('selected-image');
        $('.image-mark').remove();

        // エラーメッセージを非表示にする
        hideMessage();
    }
</script>