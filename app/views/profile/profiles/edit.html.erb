<div id="profile_profiles">
    <div class="d-flex">
        <%# ! sidebar %>
        <div class="side-content">
            <%= render "layouts/pc_sidebar" %>
        </div>

        <%# ! contents %>
        <div class="main-content">
			<%= image_tag "/assets/user/cover_img.png", class: "profile-cover" %>

            <div class="edit-content mx-auto">
				<%= form_with(model: @user, url: "/profile/update/#{@user.id}", local: true) do |f| %>
					<div class="d-flex">
						<div class="avater-area">
							<button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#EditIconModal">
								<div class="container">
									<div id="image-preview" class="preview mx-auto"></div>

									<div id="overlay" class="overlay">
										<img src="/assets/user/sample_icon.png" alt="">
									</div>
								</div>
							</button>

							<div class="modal fade modal-area modal-dialog-scrollable" id="EditIconModal" tabindex="-1" aria-labelledby="exampleModalLabel">
								<div class="modal-dialog">
									<div class="modal-content">
										<div class="modal-header">
											<h6 class="modal-title fs-6 fw-bold mx-auto" id="exampleModalLabel">プロフィール画像を設定</h6>
										</div>

										<div class="modal-body">
											<div class="col-lg-7 mx-auto py-4">
												<%= f.file_field :avatar, class: "form-control", id: "file-input" %>
											</div>
										</div>

										<div class="modal-footer post-area text-center">
											<div class="mx-auto">
												<button type="button" class="btn px-3 text-white border" data-bs-dismiss="modal">キャンセル</button>
												<button type="button" class="btn px-3 submit-btn" data-bs-dismiss="modal">選択</button>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>

						<div class="user-area">
							<div class="mb-3">
								<%= f.text_field :user_name, class: "form-control", placeholder: "名前" %>

								<div>
									<% @user.errors[:user_name].each do |error| %>
										<small class="text-danger">ユーザー名を入力してください。</small>
									<% end %>
								</div>
							</div>

							<div class="mb-3">
								<%= f.number_field :height, class: "form-control", placeholder: "身長" %>
							</div>

							<div class="mb-3">
								<%= f.number_field :weight, class: "form-control", placeholder: "体重" %>
							</div>

							<div class="mb-3">
								<%= f.number_field :age, class: "form-control", placeholder: "年齢" %>
							</div>

							<div class="mb-3">
								<%= f.select :gender, [['男性', 1], ['女性', -1]], { include_blank: '性別を選択 ▾' }, class: 'form-control' %>

								<div>
									<% @user.errors[:gender].each do |error| %>
										<small class="text-danger">性別を選択してください。</small>
									<% end %>
								</div>
							</div>

							<div class="mb-3">
								<%= f.text_area :profile, class: "form-control", placeholder: "プロフィールを入力...", style: "height: 150px;" %>
							</div>

							<%= f.submit "更新する", data: { disable_with: "プロフィールを更新中..." }, class: "btn btn-primary" %>
						</div>
					</div>
				<% end %>                      
            </div>
        </div>
    </div>
</div>

<script>
	// 画像選択をプレビューする
	var fileInput = document.getElementById('file-input');
	var preview = document.getElementById('image-preview');
	var reader = new FileReader(); // FileReaderオブジェクトを作成
	var defaultImageURL = '<%= j @user.avatar %>'; // 既存の画像URLを取得する

	// デフォルトの画像を表示
	var defaultImage = new Image();
	defaultImage.src = defaultImageURL;
	defaultImage.alt = 'デフォルト画像';
	defaultImage.classList.add('preview'); // 追加するクラス名
	defaultImage.style.width = '150px';
	defaultImage.style.height = '150px';
	defaultImage.style.borderRadius = '50%';
	defaultImage.style.objectFit = 'cover';
	defaultImage.style.marginRight = '20px';
	preview.appendChild(defaultImage);

	// input fileのchangeイベントを監視
	fileInput.addEventListener('change', function(event) {
		var file = event.target.files[0]; // 選択されたファイルを取得

		// ファイルの読み込みが完了したらプレビューを表示
		reader.onload = function(e) {
			preview.innerHTML = ''; // プレビューをクリア

			var image = new Image();
			image.src = e.target.result;
			image.alt = 'プレビュー画像';
			image.classList.add('preview'); // 追加するクラス名
			image.style.width = '150px';
			image.style.height = '150px';
			image.style.borderRadius = '50%';
			image.style.objectFit = 'cover';
			image.style.marginRight = '20px';

			preview.appendChild(image);
		};

		// ファイルをData URLとして読み込む
		reader.readAsDataURL(file);

		// プレビューされたらオーバーレイを消す関数
		const overlay = document.getElementById('overlay');
		overlay.style.display = 'none';
	});
</script>